<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "mybatis-3-mapper.dtd" >
<mapper namespace="org.gisoper.com.mapper.BasLocationMapper" >
  <resultMap id="BaseResultMap" type="org.gisoper.com.vo.BasLocation" >
    <id column="location_id" property="locationId" jdbcType="VARCHAR" />
    <result column="location_name" property="locationName" jdbcType="VARCHAR" />
    <result column="location_fullname" property="locationFullname" jdbcType="VARCHAR" />
    <result column="location_code" property="locationCode" jdbcType="VARCHAR" />
    <result column="location_level" property="locationLevel" jdbcType="VARCHAR" />
    <result column="location_citycode" property="locationCityCode" jdbcType="VARCHAR" />
    <result column="location_center" property="locationCenter" jdbcType="VARCHAR" />
    <result column="location_fullname_spell" property="locationFullnameSpell" jdbcType="VARCHAR" />
    <result column="short_spell" property="shortSpell" jdbcType="VARCHAR" />
    <result column="full_spell" property="fullSpell" jdbcType="VARCHAR" />
    <result column="creater_id" property="createrId" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="updater_id" property="updaterId" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="delete_flg" property="deleteFlg" jdbcType="BIT" />
    <result column="latest_time" property="latestTime" jdbcType="TIMESTAMP" />
    <result column="createTimeStr" property="createTimeStr" jdbcType="VARCHAR" />
    <result column="updateTimeStr" property="updateTimeStr" jdbcType="VARCHAR" />
    <result column="parent_location_id" property="parentLocationId" jdbcType="VARCHAR" />
    <result column="parent_location_full_id" property="parentLocationFullId" jdbcType="VARCHAR" />

  </resultMap>
  <sql id="Base_Column_List" >
    location_id, location_name, location_fullname, location_code,location_level,location_citycode,location_center,location_fullname_spell, short_spell, full_spell,
    creater_id, create_time, updater_id, update_time, delete_flg, latest_time,parent_location_id,parent_location_full_id
  </sql>
  <!--<delete id="deleteByPrimaryKey" parameterType="java.lang.String" flushCache="true" >
    delete from bas_location
    where location_id = #{locationId,jdbcType=VARCHAR}
  </delete>-->
  <!--<select id="selectAll" resultType="java.lang.List">
    select <include refid="Base_Column_List" />
    from
    bas_location
  </select>-->
  <insert id="insertLocationCode" parameterType="java.util.List" >
    insert into bas_location (location_id, location_name, location_fullname,
    location_code,location_level,location_citycode,location_center,location_fullname_spell, short_spell, full_spell,
    creater_id, create_time, updater_id,
    update_time, delete_flg, latest_time,parent_location_id,parent_location_full_id
    )
    values
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.locationId,jdbcType=VARCHAR},
      #{item.locationName,jdbcType=VARCHAR}, #{item.locationFullname,jdbcType=VARCHAR},
      #{item.locationCode,jdbcType=VARCHAR},
      #{item.locationLevel,jdbcType=VARCHAR},#{item.locationCityCode,jdbcType=VARCHAR},
      #{item.locationCenter,jdbcType=VARCHAR},#{item.locationFullnameSpell,jdbcType=VARCHAR},
      #{item.shortSpell,jdbcType=VARCHAR}, #{item.fullSpell,jdbcType=VARCHAR},
      #{item.createrId,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.updaterId,jdbcType=VARCHAR},
      #{item.updateTime,jdbcType=TIMESTAMP}, #{item.deleteFlg,jdbcType=CHAR}, #{item.latestTime,jdbcType=TIMESTAMP},
      #{item.parentLocationId,jdbcType=VARCHAR}, #{item.parentLocationFullId,jdbcType=VARCHAR}
      )
    </foreach>

  </insert>
  <insert id="insertLocationAreaCode" parameterType="java.util.List" >
    insert into bas_location (location_id, location_name, location_fullname,
    location_code,location_level,location_citycode,location_center,location_fullname_spell, short_spell, full_spell,
    creater_id, create_time, updater_id,
    update_time, delete_flg, latest_time,parent_location_id,parent_location_full_id
    )
    values
    <foreach collection="list" item="item" index="index" separator=",">
      (#{item.locationId,jdbcType=VARCHAR},
      #{item.locationName,jdbcType=VARCHAR}, #{item.locationFullname,jdbcType=VARCHAR},
      #{item.locationCode,jdbcType=VARCHAR},
      #{item.locationLevel,jdbcType=VARCHAR},#{item.locationCityCode,jdbcType=VARCHAR},
      #{item.locationCenter,jdbcType=VARCHAR},#{item.locationFullnameSpell,jdbcType=VARCHAR},
      #{item.shortSpell,jdbcType=VARCHAR}, #{item.fullSpell,jdbcType=VARCHAR},
      #{item.createrId,jdbcType=VARCHAR}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.updaterId,jdbcType=VARCHAR},
      #{item.updateTime,jdbcType=TIMESTAMP}, #{item.deleteFlg,jdbcType=CHAR}, #{item.latestTime,jdbcType=TIMESTAMP},
      #{item.parentLocationId,jdbcType=VARCHAR}, #{item.parentLocationFullId,jdbcType=VARCHAR}
      )
    </foreach>

  </insert>

  <select id="selectAllArea" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from bas_location
  </select>
  <!--<insert id="insertSelective" parameterType="org.gisoper.com.vo.BasLocation" flushCache="true" >
    insert into bas_location
    <trim prefix="(" suffix=")" suffixOverrides="," >
      location_id, location_name, location_fullname,
      location_code,location_level,location_citycode,location_center, short_spell, full_spell,
      creater_id, create_time, updater_id,
      update_time, delete_flg, latest_time,parent_location_id,parent_location_full_id
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{locationId,jdbcType=VARCHAR}, #{locationName,jdbcType=VARCHAR}, #{locationFullname,jdbcType=VARCHAR},
      #{locationCode,jdbcType=VARCHAR},
      #{locationLevel,jdbcType=VARCHAR},#{locationCityCode,jdbcType=VARCHAR},
      #{locationCenter,jdbcType=VARCHAR},#{locationFullnameSpell,jdbcType=VARCHAR}
      #{shortSpell,jdbcType=VARCHAR}, #{fullSpell,jdbcType=VARCHAR},
      #{createrId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updaterId,jdbcType=VARCHAR},
      #{updateTime,jdbcType=TIMESTAMP}, #{deleteFlg,jdbcType=CHAR}, #{latestTime,jdbcType=TIMESTAMP},
      #{parent_location_id,jdbcType=TIMESTAMP}, #{parentLocationFullId,jdbcType=TIMESTAMP},
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.gisoper.com.vo.BasLocation" flushCache="true" >
    update bas_location
    <set >
      <if test="locationName != null" >
        location_name = #{locationName,jdbcType=VARCHAR},
      </if>
      <if test="locationFullname != null" >
        location_fullname = #{locationFullname,jdbcType=VARCHAR},
      </if>
      <if test="locationCode != null" >
        location_code = #{locationCode,jdbcType=VARCHAR},
      </if>
      <if test="shortSpell != null" >
        short_spell = #{shortSpell,jdbcType=VARCHAR},
      </if>
      <if test="fullSpell != null" >
        full_spell = #{fullSpell,jdbcType=VARCHAR},
      </if>
      <if test="createrId != null" >
        creater_id = #{createrId,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updaterId != null" >
        updater_id = #{updaterId,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="deleteFlg != null" >
        delete_flg = #{deleteFlg,jdbcType=CHAR},
      </if>
      <if test="latestTime != null" >
        latest_time = #{latestTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where location_id = #{locationId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.gisoper.com.vo.BasLocation" flushCache="true" >
    update bas_location
    set location_name = #{locationName,jdbcType=VARCHAR},
      location_fullname = #{locationFullname,jdbcType=VARCHAR},
      location_code = #{locationCode,jdbcType=VARCHAR},
      short_spell = #{shortSpell,jdbcType=VARCHAR},
      full_spell = #{fullSpell,jdbcType=VARCHAR},
      creater_id = #{createrId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      updater_id = #{updaterId,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      delete_flg = #{deleteFlg,jdbcType=CHAR},
      latest_time = #{latestTime,jdbcType=TIMESTAMP}
    where location_id = #{locationId,jdbcType=VARCHAR}
  </update>
  
  
  <select id="selectByLocationId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from bas_location
    where location_id = #{locationId,jdbcType=VARCHAR} limit 1
  </select>
  
  <select id="selectByLocationFullname" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from bas_location
    where location_fullname = #{locationFullname,jdbcType=VARCHAR} limit 1
  </select>
  
  <select id="selectByLocationLikeFullname" resultMap="BaseResultMap" parameterType="Map" >
    select 
    <include refid="Base_Column_List" />
    from bas_location
    where location_fullname like #{locationFullname,jdbcType=VARCHAR} and location_name = #{locationName,jdbcType=VARCHAR} limit 1
  </select>
  
  <select id="selectByLocaltionName" resultMap="BaseResultMap" parameterType="Map" >
    select 
    <include refid="Base_Column_List" />
    from bas_location
    where (location_name = #{locationName,jdbcType=VARCHAR} or location_name like #{locationLikeName,jdbcType=VARCHAR})  
    AND LENGTH(location_id)= #{charLength,jdbcType=INTEGER} limit 1
  </select>
  
  <select id="selectAllLocaltion" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from bas_location order by location_id
  </select>-->
</mapper>